@model Currency_Exchange2022.ViewModels.Currency.AddTransactionViewModel

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Kembe valuten</h2>

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Add", "Transactions", FormMethod.Post))
        {
            @*<div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
            </div>*@
            <div class="form-group">
                @Html.LabelFor(m => m.InputCurrencyType)
                @Html.DropDownListFor(m => m.SelectedInputCurrencyType, new SelectList(Model.InputCurrencyType, "Value", "Text"),  new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.InputCurrencyType, "", new { @class = "text-danger" })

            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.OutputCurrencyType)
                @Html.DropDownListFor(m => m.SelectedOutputCurrencyType, new SelectList(Model.OutputCurrencyType, "Value", "Text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OutputCurrencyType, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.InputCurrencyAmount)
                @Html.TextBoxFor(m => m.InputCurrencyAmount, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.InputCurrencyAmount, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.OutputCurrencyAmount)
                @Html.TextBoxFor(m => m.OutputCurrencyAmount, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.OutputCurrencyAmount, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-primary">Shto</button>
        }
    </div>
</div>